#!/bin/sh
### BEGIN INIT INFO
# Provides:         system
# Required-Start:   $local_fs $network
# Required-Stop:    $local_fs $network
# Default-Start:    2 3 4 5
# Default-Stop:     0 1 6
# Description:      startscript
### END INIT INFO

##########################################
# READ ME AT FIRST
##########################################
# To run the script on boot
# enable local.d:
#   rc-update add local default
# write a script and place it in /etc/local.d
# myscript.start will be executed on system boot
# myscript.stop will be executed on system shutdown/reboot

##########################################
# Firewall
##########################################

# Reset Firewall rules
iptables -P INPUT ACCEPT
iptables -P OUTPUT ACCEPT
iptables -P FORWARD ACCEPT
iptables -F

# INPUT
iptables -A INPUT -p TCP --dport 22 -m conntrack --ctstate NEW,ESTABLISHED,RELATED -j ACCEPT
iptables -A INPUT -p UDP --sport 53 -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
iptables -A INPUT -p UDP --sport 123 -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
iptables -A INPUT -p TCP --sport 80 -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
iptables -A INPUT -p TCP --sport 443 -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
iptables -P INPUT DROP

# OUTPUT
iptables -A OUTPUT -p TCP --sport 22 -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
iptables -A OUTPUT -p UDP --dport 53 -m conntrack --ctstate NEW,ESTABLISHED,RELATED -j ACCEPT
iptables -A OUTPUT -p UDP --dport 123 -m conntrack --ctstate NEW,ESTABLISHED,RELATED -j ACCEPT
iptables -A OUTPUT -p TCP --dport 80 -m conntrack --ctstate NEW,ESTABLISHED,RELATED -j ACCEPT
iptables -A OUTPUT -p TCP --dport 443 -m conntrack --ctstate NEW,ESTABLISHED,RELATED -j ACCEPT
iptables -P OUTPUT DROP

# FORWARD

##########################################
# Creating trusted self-signed certificate
##########################################
# generating CA private key
openssl genrsa -out server_rootCA.key 4096

# generating CA certificate
openssl req -x509 -new -nodes -key server_rootCA.key -sha256 -days 3650 -out server_rootCA.pem

# writing v3.ext file
touch v3.ext
echo "authorityKeyIdentifier=keyid,issuer" >> v3.ext
echo "basicConstraints=CA:FALSE" >> v3.ext
echo "keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment" >> v3.ext
echo "subjectAltName = @alt_names" >> v3.ext
echo "" >> v3.ext
echo "[alt_names]" >> v3.ext
echo "IP.1=X.X.X.X" v3.ext # Enter here IP server

# generating server private key & server csr
openssl req -new -sha256 -nodes -out server.csr -newkey rsa:4096 -keyout server.key

# generating server certificate
openssl x509 -req -in server.csr -CA server_rootCA.pem -CAkey server_rootCA.key -CAcreateserial -out server.crt -days 3650 -sha256 -extfile v3.ext

# for import & successful use in firefox, set the following about:config attributes:
# network.stricttransportsecurity.preloadlist - false
# security.enterprise_roots.enabled - true
# last but not least import the 'server_rootCA.pem' into firefox

##########################################
# Setting up Wireguard - Server
##########################################
touch /etc/wireguard/wg0.conf
echo "[Interface]" >> /etc/wireguard/wg0.conf
echo "PrivateKey=<priv_key>" >> /etc/wireguard/wg0.conf # private Key from server. To generate private- and public Key: wg genkey | tee privatekey | wg pubkey > publickey
echo "ListenPort=65000" >> /etc/wireguard/wg0.conf
echo "Address=10.0.10.0/24" >> /etc/wireguard/wg0.conf
echo "PostUp=iptables -A FORWARD -i %i -j ACCEPT; iptables -A FORWARD -o %i -j ACCEPT; iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE" >> /etc/wireguard/wg0.conf # For eth0 you can set any other interface you want
echo "PostDown=iptables -D FORWARD -i %i -j ACCEPT; iptables -D FORWARD -o %i -j ACCEPT; iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE" >> /etc/wireguard/wg0.conf # For eth0 you can set any other interface you want
echo "" >> /etc/wireguard/wg0.conf
echo "[Peer]" >> /etc/wireguard/wg0.conf
echo "PublicKey=<pub_key>" >> /etc/wireguard/wg0.conf # public key from client who want to connect
echo "AllowedIPs=10.0.10.1/32" >> /etc/wireguard/wg0.conf # allow the client with the given IP

##########################################
# Start Wireguard
##########################################
wg-quick up /etc/wireguard/wg0.conf
